# Define colors
RED = "\033[91m"
YELLOW = "\033[93m"
GREEN = "\033[92m"
BLUE = "\033[94m"
WHITE = "\033[97m"
RESSET = "\033[0m"

# Define the ring ascii art and use color
Red_Ring = f"""{RED}         
 _______________________
|                       |
|_______________________| 
{RESSET}"""

Yellow_Ring = f"""{YELLOW}            
   ___________________
  |                   |
  |___________________|              
{RESSET}"""

Green_Ring = f"""{GREEN}  
     _______________
    |               |
    |_______________|
{RESSET}"""

Blue_Ring = f"""{BLUE}            
      _____________
     |             |
     |_____________|                          
{RESSET}"""

White_Ring = f"""{WHITE}
        _________
       |         |
       |_________|                          
{RESSET}"""

# Create the stack and use a set to track added rings
stack = []
added_rings = set()

# Display funtion to display top to bottom
def display_stack():
    print("\nCurrent Stack (from top to bottom):")
    if not stack:
        print(f"{WHITE}[Empty Stack]{RESSET}")
    else:
        for ring in reversed(stack):  # Display the stack from top to bottom
            print(ring)
    print(f"{WHITE}~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~{RESSET}")

# Push funtion to add rings to the stack
def push(ring, ring_color, ring_name, color):
    if ring_color in added_rings:
        print(f"{color}You cannot add the {ring_name} Ring again!{RESSET}")
    else:
        stack.append(ring)
        added_rings.add(ring_color)
        print(f"{color}You added the {ring_name} Ring!{RESSET}")

# Welcome message
print(f"{WHITE}~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~{RESSET}")
print(f"{WHITE}Welcome to the Stacking Toy Program{RESSET}")
print(f"{WHITE}~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~{RESSET}")
display_stack()

# Game loop
while True:
    print("\nOptions:")
    print(f"{RED}R - Add Red Ring{RESSET}")
    print(f"{YELLOW}Y - Add Yellow Ring{RESSET}")
    print(f"{GREEN}G - Add Green Ring{RESSET}")
    print(f"{BLUE}B - Add Blue Ring{RESSET}")
    print(f"{WHITE}W - Add White Ring{RESSET}")
    print(f"{WHITE}U - Unstack Top Ring{RESSET}")
    print(f"{WHITE}Q - Quit{RESSET}")
   
    choice = input("\nWhat would you like to do? ").upper()

#user choices and push function used
    if choice == 'R':
        push(Red_Ring, 'R', 'Red', RED)
    elif choice == 'Y':
        push(Yellow_Ring, 'Y', 'Yellow', YELLOW)
    elif choice == 'G':
        push(Green_Ring, 'G', 'Green', GREEN)
    elif choice == 'B':
        push(Blue_Ring, 'B', 'Blue', BLUE)
    elif choice == 'W':
        push(White_Ring, 'W', 'White', WHITE)
    elif choice == 'U':
        if stack:
            removed_ring = stack.pop() # Remove the top ring using pop()
            print(f"{WHITE}You removed the top ring:{RESSET} {removed_ring}")
        else:
            print(f"{RED}The stack is empty! No rings to remove.{RESSET}")
    elif choice == 'Q':
        print(f"{WHITE}Thank you for playing!{RESSET}")
        break
    else:
        print(f"{RED}Invalid choice. Please enter R, Y, G, B, W, U, or Q.{RESSET}")
   
    # Display the updated stack
    display_stack()
