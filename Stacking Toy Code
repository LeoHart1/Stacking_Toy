# Define colors
RED = "\033[91m"
DARK_ORANGE = "\033[33m"
ORANGE = "\033[33m"
LIGHT_YELLOW = "\033[93m"
YELLOW = "\033[93m"
GREEN = "\033[92m"
BLUE = "\033[94m"
WHITE = "\033[97m"
RESSET = "\033[0m"

# Define the rings with colors
Red_Ring = f"""{RED}         
 _______________________
|                       |
|_______________________| 
{RESSET}"""

Yellow_Ring = f"""{YELLOW}            
   ___________________
  |                   |
  |___________________|              
{RESSET}"""

Green_Ring = f"""{GREEN}  
     _______________
    |               |
    |_______________|
{RESSET}"""

Blue_Ring = f"""{BLUE}            
      _____________
     |             |
     |_____________|                          
{RESSET}"""

White_Ring = f"""{WHITE}
        _________
       |         |
       |_________|                          
{RESSET}"""

# Initialize the stack and a set to track added rings
stack = []

added_rings = set()

# Function to display the stack
def display_stack():
    print("\nCurrent Stack (from top to bottom):")
    if not stack:
        print(f"{WHITE}[Empty Stack]{RESSET}")
    else:
        for ring in reversed(stack):  # Display the stack from top to bottom
            print(ring)
    print(f"{WHITE}~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~{RESSET}")

# Welcome message
print(f"{WHITE}~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~{RESSET}")
print(f"{WHITE}Welcome to the Stacking Toy Program{RESSET}")
print(f"{WHITE}~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~{RESSET}")
display_stack()

# Game loop
while True:
    print("\nOptions:")
    print(f"{RED}R - Add Red Ring{RESSET}")
    print(f"{YELLOW}Y - Add Yellow Ring{RESSET}")
    print(f"{GREEN}G - Add Green Ring{RESSET}")
    print(f"{BLUE}B - Add Blue Ring{RESSET}")
    print(f"{WHITE}W - Add White Ring{RESSET}")
    print(f"{WHITE}U - Unstack Top Ring{RESSET}")
    print(f"{WHITE}Q - Quit{RESSET}")
   
    choice = input("\nWhat would you like to do? ").upper()

    if choice == 'R':
        if 'R' in added_rings:
            print(f"{RED}You cannot add the Red Ring again!{RESSET}")
        else:
            stack.append(Red_Ring)
            added_rings.add('R')
            print(f"{RED}You added the Red Ring!{RESSET}")
    elif choice == 'Y':
        if 'Y' in added_rings:
            print(f"{YELLOW}You cannot add the Yellow Ring again!{RESSET}")
        else:
            stack.append(Yellow_Ring)
            added_rings.add('Y')
            print(f"{YELLOW}You added the Yellow Ring!{RESSET}")
    elif choice == 'G':
        if 'G' in added_rings:
            print(f"{GREEN}You cannot add the Green Ring again!{RESSET}")
        else:
            stack.append(Green_Ring)
            added_rings.add('G')
            print(f"{GREEN}You added the Green Ring!{RESSET}")
    elif choice == 'B':
        if 'B' in added_rings:
            print(f"{BLUE}You cannot add the Blue Ring again!{RESSET}")
        else:
            stack.append(Blue_Ring)
            added_rings.add('B')
            print(f"{BLUE}You added the Blue Ring!{RESSET}")
    elif choice == 'W':
        if 'W' in added_rings:
            print(f"{WHITE}You cannot add the White Ring again!{RESSET}")
        else:
            stack.append(White_Ring)
            added_rings.add('W')
            print(f"{WHITE}You added the White Ring!{RESSET}")
    elif choice == 'U':
        if stack:
            removed_ring = stack.pop()
            print(f"{WHITE}You removed the top ring:{RESSET} {removed_ring}")
        else:
            print(f"{RED}The stack is empty! No rings to remove.{RESSET}")
    elif choice == 'Q':
        print(f"{WHITE}Thank you for playing!{RESSET}")
        break
    else:
        print(f"{RED}Invalid choice. Please enter R, Y, G, B, W, U, or Q.{RESSET}")
   
    # Display the updated stack
    display_stack()
